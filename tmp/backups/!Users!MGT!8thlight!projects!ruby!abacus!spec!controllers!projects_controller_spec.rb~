require 'spec_helper'
require 'project/project_active_record'
require 'project_note/project_note_active_record'
require 'mocks/mock_project_interactor'

describe ProjectsController do

  before(:each) do
    controller_setup
  end

  context "actions that interact with the record" do

    before(:each) do
      @lead = AR::Project.create(:name => "A")
      @prospect = AR::Project.create(:name => "B")
      @client = AR::Project.create(:name => "C")
      @projects = [@lead, @prospect, @client]

      interactor = MockProjectInteractor.new(@projects)
      Interactor::Project.stub(:new).and_return(interactor)
    end

    describe "#index" do
      it "calls interactor.find_all" do
        get :index, :format => 'json'
        @projects.to_json.should be_json_eql(response.body).excluding('project_note')
      end
    end

    describe "#create" do
      it "creates a new project with the given params" do
        params = {"name" => "test"}
        post :create, :project => params
        project = AR::Project.new(params)
        response.body.should == project.to_json
      end
    end

    describe "#show" do
      it "calls show on the interactor with id and callback" do
        get :show, :id => @lead.id
        @lead.to_json.should be_json_eql(response.body).excluding('project_note')
      end
    end

    describe "#update" do
      it "updates a project with given params and returns project as JSON" do
        date = '2011/04/01'
        params = {:id => 33, :name => 'test', :updated_at => date}
        post :update, :id => 33, :project => params, :format => 'json'

        parsed_body = JSON.parse(response.body)
        parsed_body['id'].should eq(33)
        parsed_body['name'].should eq('test')
      end
    end

  end
end
