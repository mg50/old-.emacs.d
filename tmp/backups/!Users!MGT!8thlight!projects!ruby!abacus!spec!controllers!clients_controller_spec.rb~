require 'spec_helper'
require 'client/client_active_record'
require 'mocks/mock_client_interactor'

describe ClientsController do

  before(:each) do
    controller_setup
  end

  context "actions that interact with the record" do

    before(:each) do
      @client1 = AR::Client.create(:name => "A")
      @client2 = AR::Client.create(:name => "B")
      @client3 = AR::Client.create(:name => "C")
      @clients = [@client1, @client2, @client3]

      interactor = MockClientInteractor.new(@clients)
      Interactor::Client.stub(:new).and_return(interactor)
    end

    describe "#index" do
      it "calls interactor.find_all" do
        get :index, :format => 'json'
        @clients.to_json.should be_json_eql(response.body).excluding('projects', 'contacts')
      end
    end

    describe "#create" do
      it "creates a new client with the given params" do
        params = {"name" => "test"}
        post :create, :client => params
        client = AR::Client.new(params)
        response.body.should == client.to_json
      end
    end

    describe "#show" do
      it "calls show on the interactor with id and callback" do
        get :show, :id => @client1.id
        response.body.should == @client1.to_json
      end
    end

    describe "#update" do
      it "updates a client with given params and returns client as JSON" do
        params = {:id => 33, :name => 'test'}
        post :update, :id => 33, :client => params, :format => 'json'

        parsed_body = JSON.parse(response.body)
        parsed_body['id'].should eq(33)
        parsed_body['name'].should eq('test')
      end
    end

  end
end
