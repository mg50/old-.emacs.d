
namespace('Hosemonster.Views', {
    TestPointDisplay: Hosemonster.Views.Base.extend({
        template: 'testpoint_display',
        tagName: 'table',
        className: 'testpoint_display',

        events: {
            'click .edit': 'switchToEditViewClickHandler',
            'click .delete': 'deleteTestPointClickHandler'
        },

        switchToEditViewClickHandler: function(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            this.switchToEditView();
        },

        switchToEditView: function() {
            this.switchToView(Hosemonster.Views.TestPointEdit);
        },

        deleteTestPointClickHandler: function(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            this.deleteTestPoint();
        },

        deleteTestPoint: function() {
            this.model.destroy();
            this.remove();
        },

        renderChildViews: function() {
            var self = this;
            _.each(this.model.get('streams').models, function(stream) {
                var streamView = new Hosemonster.Views.StreamDisplay({model: stream})
                streamView.render();
                self.$el.find('.streams-container').append(streamView.$el);
            });
        },
    })
});
