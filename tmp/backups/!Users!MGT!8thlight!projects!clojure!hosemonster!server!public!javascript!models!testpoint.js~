namespace('Hosemonster.Models', {
    TestPoint: Backbone.RelationalModel.extend({
        defaults: {
            "work-order-key": $('[name=work-order-key]').val(),
            kind: 'test-point'
        },
        url: '/test-points/',

        destroy: function() {
            var key = this.get('key');
            Backbone.Model.prototype.destroy.call(this);
            if(key) $.ajax({
                url: '/test-points/' + key + '/delete',
                type: 'get'
            })
        },

        relations: [{
            type: Backbone.HasMany,
            key: 'streams',
            includeInJSON: true,
            relatedModel: Hosemonster.Models.Stream,
            collectionType: Hosemonster.Collections.Streams,
            reverseRelation: {
                type: Backbone.HasOne,
                key: 'testPoint',
                includeInJSON: false
            }
        }],

        toJSON: function() {
            var ret = {}
            var fields = ['key', 'work-order-key', 'speed', 'discharge-pressure', 'suction-pressure', 'volts1', 'volts2', 'volts3',
                          'amps1', 'amps2', 'amps3', 'kind']
            for(x in fields) {
                ret[fields[x]] = this.get(fields[x]);
            }
            ret.streams = _.map(this.get('streams').models, function(stream) {
                return stream.toJSON();
            })
            return ret;
        }
    })
});
